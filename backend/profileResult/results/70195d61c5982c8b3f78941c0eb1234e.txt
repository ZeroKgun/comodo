Timer unit: 1e-06 s

Total time: 0.00018826 s
File: 70195d61c5982c8b3f78941c0eb1234e.py
Function: main at line 3

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
     3                                           @profile
     4                                           def main():
     5         1          8.5      8.5      4.5  	input = sys.stdin.readline
     6                                           	
     7                                           	# 양분 그래프 n x n , m나무개수, k년이 지난 후
     8         1         20.5     20.5     10.9  	n,m,k = map(int,input().split())
     9                                           	
    10                                           	# 나중에 겨울에 양분 추가해줄 그래프  = plus_soil
    11         1          0.3      0.3      0.2  	plus_soil = []
    12         5          2.5      0.5      1.4  	for _ in range(n):
    13         5          7.5      1.5      4.0  	    plus_soil.append(list(map(int,input().split())))
    14                                           	
    15                                           	# 나무 양분 그래프
    16         1          3.0      3.0      1.6  	origin_soil = [[5]*n for _ in range(n)]
    17                                           	
    18                                           	
    19                                           	# 살아있는 나무 그래프
    20         1          6.7      6.7      3.6  	live = [[[] for _ in range(n)] for _ in range(n)]
    21         2          0.7      0.4      0.4  	for _ in range(m):
    22         2          6.1      3.1      3.3  	    x,y,z = map(int,input().split())
    23         2          1.0      0.5      0.6  	    live[x-1][y-1].append(z)
    24                                           	
    25         2          0.7      0.3      0.4  	for _ in range(k):
    26                                           	    # 봄 + 여름
    27        10          2.0      0.2      1.1  	    for i in range(n):
    28        50          9.8      0.2      5.2  	        for j in range(n):
    29        46          8.5      0.2      4.5  	            if live[i][j] :
    30                                           	                # 봄에 나이가 어린 나무 부터 양분을 먹게하기위한 정렬
    31         4          1.5      0.4      0.8  	                live[i][j].sort()
    32                                           	                # live = [] # 살아있는 나무들 리스트를 알아야 가을에 번식을 할 수 있다.
    33         4          1.0      0.2      0.5  	                tmp_live_tree=[]
    34         4          1.0      0.2      0.5  	                death = 0
    35         4          1.3      0.3      0.7  	                for age in live[i][j]:
    36         4          1.2      0.3      0.6  	                    if age <= origin_soil[i][j]:
    37         4          1.6      0.4      0.9  	                        origin_soil[i][j] -= age
    38         4          0.9      0.2      0.5  	                        age += 1
    39         4          1.3      0.3      0.7  	                        tmp_live_tree.append(age)
    40                                           	                    else:
    41                                           	                        death += age // 2
    42         4          1.3      0.3      0.7  	                origin_soil[i][j] += death
    43                                           	                # 죽은건 죽은대로, 산건 산거대로 옮긴다.
    44         4          1.8      0.4      1.0  	                live[i][j] .clear()
    45         4          1.4      0.3      0.7  	                live[i][j].extend(tmp_live_tree)
    46                                           	
    47                                           	    #가을
    48         2          0.7      0.3      0.4  	    dx = [-1,-1,0,1,1,1,0,-1]
    49         2          0.5      0.3      0.3  	    dy = [0,1,1,1,0,-1,-1,-1]
    50                                           	
    51        10          2.3      0.2      1.2  	    for i in range(n):
    52        50         11.1      0.2      5.9  	        for j in range(n):
    53        40          8.0      0.2      4.2  	            if live[i][j]:
    54        11          2.9      0.3      1.5  	                for age in live[i][j]:
    55         9          3.5      0.4      1.8  	                    if age % 5 == 0:
    56        16          3.2      0.2      1.7  	                        for dir in range(8):
    57        16          3.4      0.2      1.8  	                            nx = i+ dx[dir]
    58        16          3.5      0.2      1.9  	                            ny = j+ dy[dir]
    59        13          4.7      0.4      2.5  	                            if 0<= nx < n and 0<= ny < n:
    60        13          3.9      0.3      2.1  	                                live[nx][ny].append(1)
    61                                           	    #겨울
    62        10          2.2      0.2      1.2  	    for i in range(n):
    63        50         10.5      0.2      5.6  	        for j in range(n):
    64        50         15.7      0.3      8.3  	            origin_soil[i][j] += plus_soil[i][j]
    65                                           	
    66         1          0.2      0.2      0.1  	result = 0
    67         5          1.0      0.2      0.6  	for i in range(n):
    68        25          5.7      0.2      3.1  	    for j in range(n):
    69        25          7.9      0.3      4.2  	        result += len(live[i][j])
    70         1          4.7      4.7      2.5  	print(result)

